<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(100,30)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(100,50)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(650,630)" name="Splitter">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="0" loc="(710,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Seletor"/>
      <a name="width" val="2"/>
    </comp>
    <comp lib="0" loc="(710,50)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="2" loc="(670,50)" name="Multiplexer">
      <a name="select" val="2"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(450,150)" name="Subtrator4Bits"/>
    <comp loc="(450,20)" name="Somador4Bits"/>
    <comp loc="(450,280)" name="Incremento"/>
    <comp loc="(450,410)" name="TrocaDeSinal"/>
    <wire from="(600,60)" to="(630,60)"/>
    <wire from="(610,50)" to="(630,50)"/>
    <wire from="(620,40)" to="(630,40)"/>
    <wire from="(650,130)" to="(650,630)"/>
    <wire from="(650,130)" to="(710,130)"/>
    <wire from="(650,70)" to="(650,130)"/>
    <wire from="(670,50)" to="(710,50)"/>
  </circuit>
  <circuit name="Somador">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Somador"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(100,100)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
    </comp>
    <comp lib="0" loc="(100,140)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y"/>
    </comp>
    <comp lib="0" loc="(110,50)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Cin"/>
    </comp>
    <comp lib="0" loc="(640,140)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(650,300)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Cout"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(370,120)" name="XOR Gate"/>
    <comp lib="1" loc="(480,250)" name="AND Gate"/>
    <comp lib="1" loc="(480,360)" name="AND Gate"/>
    <comp lib="1" loc="(590,140)" name="XOR Gate"/>
    <comp lib="1" loc="(610,300)" name="OR Gate"/>
    <wire from="(100,100)" to="(200,100)"/>
    <wire from="(100,140)" to="(190,140)"/>
    <wire from="(110,50)" to="(120,50)"/>
    <wire from="(120,270)" to="(340,270)"/>
    <wire from="(120,50)" to="(120,270)"/>
    <wire from="(190,140)" to="(190,380)"/>
    <wire from="(190,140)" to="(310,140)"/>
    <wire from="(190,380)" to="(430,380)"/>
    <wire from="(200,100)" to="(200,340)"/>
    <wire from="(200,100)" to="(310,100)"/>
    <wire from="(200,340)" to="(430,340)"/>
    <wire from="(340,160)" to="(340,270)"/>
    <wire from="(340,160)" to="(530,160)"/>
    <wire from="(340,270)" to="(430,270)"/>
    <wire from="(370,120)" to="(390,120)"/>
    <wire from="(390,120)" to="(390,230)"/>
    <wire from="(390,120)" to="(530,120)"/>
    <wire from="(390,230)" to="(430,230)"/>
    <wire from="(480,250)" to="(520,250)"/>
    <wire from="(480,360)" to="(520,360)"/>
    <wire from="(520,250)" to="(520,280)"/>
    <wire from="(520,280)" to="(560,280)"/>
    <wire from="(520,320)" to="(520,360)"/>
    <wire from="(520,320)" to="(560,320)"/>
    <wire from="(590,140)" to="(640,140)"/>
    <wire from="(610,300)" to="(650,300)"/>
  </circuit>
  <circuit name="Subtrator4Bits">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Subtrator4Bits"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(280,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(280,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(330,110)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Cin"/>
    </comp>
    <comp lib="0" loc="(550,110)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(550,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Zero"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Cout"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(550,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Overflow"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(330,150)" name="NOT Gate">
      <a name="width" val="4"/>
    </comp>
    <comp loc="(550,110)" name="Somador4Bits"/>
    <wire from="(280,130)" to="(330,130)"/>
    <wire from="(280,150)" to="(300,150)"/>
  </circuit>
  <circuit name="Somador4Bits">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Somador4Bits"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(110,70)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="0" loc="(210,50)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Cin"/>
    </comp>
    <comp lib="0" loc="(530,440)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Cout"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(570,110)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="0" loc="(610,110)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(710,240)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Zero"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(790,570)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="OverFlow"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(90,110)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Y"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(90,110)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
    </comp>
    <comp lib="0" loc="(90,60)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="1" loc="(590,210)" name="NOT Gate"/>
    <comp lib="1" loc="(590,230)" name="NOT Gate"/>
    <comp lib="1" loc="(590,250)" name="NOT Gate"/>
    <comp lib="1" loc="(590,270)" name="NOT Gate"/>
    <comp lib="1" loc="(670,240)" name="AND Gate">
      <a name="inputs" val="4"/>
      <a name="size" val="70"/>
    </comp>
    <comp lib="1" loc="(670,530)" name="AND Gate">
      <a name="inputs" val="3"/>
      <a name="negate0" val="true"/>
    </comp>
    <comp lib="1" loc="(670,600)" name="AND Gate">
      <a name="inputs" val="3"/>
      <a name="negate1" val="true"/>
      <a name="negate2" val="true"/>
    </comp>
    <comp lib="1" loc="(770,570)" name="OR Gate"/>
    <comp loc="(450,120)" name="Somador"/>
    <comp loc="(450,220)" name="Somador"/>
    <comp loc="(450,320)" name="Somador"/>
    <comp loc="(450,420)" name="Somador"/>
    <wire from="(110,120)" to="(160,120)"/>
    <wire from="(110,130)" to="(150,130)"/>
    <wire from="(110,140)" to="(140,140)"/>
    <wire from="(110,150)" to="(130,150)"/>
    <wire from="(110,60)" to="(110,70)"/>
    <wire from="(130,100)" to="(180,100)"/>
    <wire from="(130,110)" to="(170,110)"/>
    <wire from="(130,150)" to="(130,460)"/>
    <wire from="(130,460)" to="(130,550)"/>
    <wire from="(130,460)" to="(230,460)"/>
    <wire from="(130,550)" to="(580,550)"/>
    <wire from="(130,80)" to="(200,80)"/>
    <wire from="(130,90)" to="(190,90)"/>
    <wire from="(140,140)" to="(140,360)"/>
    <wire from="(140,360)" to="(230,360)"/>
    <wire from="(150,130)" to="(150,260)"/>
    <wire from="(150,260)" to="(230,260)"/>
    <wire from="(160,120)" to="(160,160)"/>
    <wire from="(160,160)" to="(230,160)"/>
    <wire from="(170,110)" to="(170,440)"/>
    <wire from="(170,440)" to="(170,530)"/>
    <wire from="(170,440)" to="(230,440)"/>
    <wire from="(170,530)" to="(590,530)"/>
    <wire from="(180,100)" to="(180,340)"/>
    <wire from="(180,340)" to="(230,340)"/>
    <wire from="(190,240)" to="(230,240)"/>
    <wire from="(190,90)" to="(190,240)"/>
    <wire from="(200,140)" to="(230,140)"/>
    <wire from="(200,80)" to="(200,140)"/>
    <wire from="(210,50)" to="(220,50)"/>
    <wire from="(220,120)" to="(230,120)"/>
    <wire from="(220,200)" to="(220,220)"/>
    <wire from="(220,200)" to="(450,200)"/>
    <wire from="(220,220)" to="(230,220)"/>
    <wire from="(220,50)" to="(220,120)"/>
    <wire from="(230,300)" to="(230,320)"/>
    <wire from="(230,300)" to="(450,300)"/>
    <wire from="(230,400)" to="(230,420)"/>
    <wire from="(230,400)" to="(450,400)"/>
    <wire from="(450,120)" to="(520,120)"/>
    <wire from="(450,140)" to="(450,200)"/>
    <wire from="(450,220)" to="(460,220)"/>
    <wire from="(450,240)" to="(450,300)"/>
    <wire from="(450,320)" to="(470,320)"/>
    <wire from="(450,340)" to="(450,400)"/>
    <wire from="(450,420)" to="(480,420)"/>
    <wire from="(450,440)" to="(530,440)"/>
    <wire from="(460,130)" to="(460,220)"/>
    <wire from="(460,130)" to="(510,130)"/>
    <wire from="(470,140)" to="(470,320)"/>
    <wire from="(470,140)" to="(500,140)"/>
    <wire from="(480,150)" to="(480,420)"/>
    <wire from="(480,150)" to="(490,150)"/>
    <wire from="(480,420)" to="(480,510)"/>
    <wire from="(480,510)" to="(600,510)"/>
    <wire from="(490,150)" to="(490,270)"/>
    <wire from="(490,150)" to="(550,150)"/>
    <wire from="(490,270)" to="(560,270)"/>
    <wire from="(500,140)" to="(500,250)"/>
    <wire from="(500,140)" to="(550,140)"/>
    <wire from="(500,250)" to="(560,250)"/>
    <wire from="(510,130)" to="(510,230)"/>
    <wire from="(510,130)" to="(550,130)"/>
    <wire from="(510,230)" to="(560,230)"/>
    <wire from="(520,120)" to="(520,210)"/>
    <wire from="(520,120)" to="(550,120)"/>
    <wire from="(520,210)" to="(560,210)"/>
    <wire from="(570,110)" to="(610,110)"/>
    <wire from="(580,550)" to="(580,620)"/>
    <wire from="(580,550)" to="(620,550)"/>
    <wire from="(580,620)" to="(610,620)"/>
    <wire from="(590,210)" to="(600,210)"/>
    <wire from="(590,230)" to="(600,230)"/>
    <wire from="(590,250)" to="(600,250)"/>
    <wire from="(590,270)" to="(600,270)"/>
    <wire from="(590,530)" to="(590,600)"/>
    <wire from="(590,530)" to="(620,530)"/>
    <wire from="(590,600)" to="(610,600)"/>
    <wire from="(600,510)" to="(600,580)"/>
    <wire from="(600,510)" to="(610,510)"/>
    <wire from="(600,580)" to="(620,580)"/>
    <wire from="(670,240)" to="(710,240)"/>
    <wire from="(670,530)" to="(690,530)"/>
    <wire from="(670,600)" to="(690,600)"/>
    <wire from="(690,530)" to="(690,550)"/>
    <wire from="(690,550)" to="(720,550)"/>
    <wire from="(690,590)" to="(690,600)"/>
    <wire from="(690,590)" to="(720,590)"/>
    <wire from="(770,570)" to="(790,570)"/>
    <wire from="(90,60)" to="(110,60)"/>
  </circuit>
  <circuit name="Incremento">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Incremento"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(110,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(230,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Mais1"/>
    </comp>
    <comp lib="0" loc="(230,300)" name="Ground"/>
    <comp lib="0" loc="(310,210)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
      <a name="spacing" val="2"/>
    </comp>
    <comp lib="0" loc="(380,170)" name="Ground"/>
    <comp lib="0" loc="(610,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Zero"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,210)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Cout"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="OverFlow"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(660,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp loc="(610,170)" name="Somador4Bits"/>
    <wire from="(110,190)" to="(390,190)"/>
    <wire from="(230,220)" to="(290,220)"/>
    <wire from="(230,240)" to="(230,260)"/>
    <wire from="(230,240)" to="(290,240)"/>
    <wire from="(230,260)" to="(230,280)"/>
    <wire from="(230,260)" to="(290,260)"/>
    <wire from="(230,280)" to="(230,300)"/>
    <wire from="(230,280)" to="(290,280)"/>
    <wire from="(310,210)" to="(390,210)"/>
    <wire from="(380,170)" to="(390,170)"/>
    <wire from="(610,170)" to="(660,170)"/>
  </circuit>
  <circuit name="TrocaDeSinal">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="TrocaDeSinal"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(110,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="X"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(230,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Mais1"/>
    </comp>
    <comp lib="0" loc="(230,300)" name="Ground"/>
    <comp lib="0" loc="(310,210)" name="Splitter">
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="4"/>
      <a name="spacing" val="2"/>
    </comp>
    <comp lib="0" loc="(380,170)" name="Ground"/>
    <comp lib="0" loc="(610,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Zero"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,210)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Cout"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(610,230)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="OverFlow"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(660,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Z"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="1" loc="(220,190)" name="NOT Gate">
      <a name="width" val="4"/>
    </comp>
    <comp loc="(610,170)" name="Somador4Bits"/>
    <wire from="(110,190)" to="(190,190)"/>
    <wire from="(220,190)" to="(390,190)"/>
    <wire from="(230,220)" to="(290,220)"/>
    <wire from="(230,240)" to="(230,260)"/>
    <wire from="(230,240)" to="(290,240)"/>
    <wire from="(230,260)" to="(230,280)"/>
    <wire from="(230,260)" to="(290,260)"/>
    <wire from="(230,280)" to="(230,300)"/>
    <wire from="(230,280)" to="(290,280)"/>
    <wire from="(310,210)" to="(390,210)"/>
    <wire from="(380,170)" to="(390,170)"/>
    <wire from="(610,170)" to="(660,170)"/>
  </circuit>
  <circuit name="ShifterLeft">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="ShifterLeft"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(220,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp loc="(460,140)" name="Somador"/>
  </circuit>
  <circuit name="TesteVhdl">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="TesteVhdl"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(190,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(190,370)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(270,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(530,370)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(530,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(530,410)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(530,430)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(600,350)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="0" loc="(70,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(70,70)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(70,90)" name="Pin">
      <a name="appearance" val="NewPins"/>
    </comp>
    <comp lib="0" loc="(930,180)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(930,70)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="1" loc="(910,180)" name="OR Gate"/>
    <comp loc="(440,70)" name="HA">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(530,350)" name="ULA">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(780,70)" name="HA">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <wire from="(190,350)" to="(310,350)"/>
    <wire from="(190,370)" to="(310,370)"/>
    <wire from="(270,390)" to="(310,390)"/>
    <wire from="(440,70)" to="(560,70)"/>
    <wire from="(440,90)" to="(460,90)"/>
    <wire from="(460,200)" to="(860,200)"/>
    <wire from="(460,90)" to="(460,200)"/>
    <wire from="(500,90)" to="(500,170)"/>
    <wire from="(500,90)" to="(560,90)"/>
    <wire from="(530,350)" to="(600,350)"/>
    <wire from="(70,170)" to="(500,170)"/>
    <wire from="(70,70)" to="(220,70)"/>
    <wire from="(70,90)" to="(220,90)"/>
    <wire from="(780,70)" to="(930,70)"/>
    <wire from="(780,90)" to="(830,90)"/>
    <wire from="(830,160)" to="(860,160)"/>
    <wire from="(830,90)" to="(830,160)"/>
    <wire from="(910,180)" to="(930,180)"/>
  </circuit>
  <vhdl name="HA">
LIBRARY ieee;
USE ieee.std_logic_1164.all;


ENTITY HA IS

    PORT (

        A      : IN  std_logic;
        B      : IN  std_logic;
        
        S      : OUT std_logic;
        Cout   : OUT std_logic
    
    );

END HA;


ARCHITECTURE Behavioral OF HA IS

BEGIN

    S &lt;= A XOR B;
    Cout &lt;= A AND B;

END Behavioral;
</vhdl>
  <vhdl name="FA">
LIBRARY ieee;
USE ieee.std_logic_1164.all;


ENTITY FA IS

    PORT (

        a      : IN  std_logic;
        b      : IN  std_logic;
        cin      : IN  std_logic;


        s      : OUT std_logic;
        cout   : OUT std_logic
    
    );

END FA;


ARCHITECTURE Structural OF FA IS

    COMPONENT HA 

        PORT (

            A      : IN  std_logic;
            B      : IN  std_logic;

            S      : OUT std_logic;
            Cout   : OUT std_logic

        );

    END COMPONENT;

    SIGNAL somaHA1, coutHA1, coutHA2: std_logic;

    BEGIN

        HA1: HA PORT MAP (

            a,
            b,
            somaHA1,
            coutHA1
        );
        
        HA2: HA PORT MAP (

            somaHA1,
            cin,
            s,
            coutHA2
        );

        cout &lt;= coutHA1 OR coutHA2;

END Structural;
</vhdl>
  <vhdl name="ULA">library ieee;
use ieee.std_logic_1164.all;

ENTITY ULA IS
    PORT (
    
        a, b            :       in std_logic_vector(3 DOWNTO 0);
        seletor         :       in std_logic_vector(1 DOWNTO 0);
        --seletor       :       in std_logic_vector(2 DOWNTO 0);

        resultado       :       out std_logic_vector(3 DOWNTO 0);

        ovf             :       out std_logic;
        zero            :       out std_logic;
        Neg             :       out std_logic;
        cout            :       out std_logic
  
    );
END ULA;

ARCHiTECTURE Behavioral OF ULA IS
  
    FUNCTION HA(a, b: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout: std_logic;
  
        BEGIN
    
            sum := a XOR b;
            cout := a AND b;
            return (sum, cout);
  
    END FUNCTION;

    FUNCTION FA(a, b, c: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout                  :       std_logic;
        VARIABLE sumHA1,coutHA1,coutHA2     :       std_logic;

        BEGIN

            (sumHA1,coutHA1)    :=   HA(a,b);
            (sum,coutHA2)       :=   HA(sumHA1,c);
            cout                :=   coutHA1 OR coutHA2;

            RETURN (sum, cout);
    
    END FUNCTION;

    FUNCTION somador4Bits(a,b : std_logic_vector) RETURN std_logic_vector IS

        VARIABLE sum, cout                  :      std_logic_vector(3 DOWNTO 0);

        BEGIN

            (sum(0), cout(0)) := FA(a(0), b(0), '0');
            (sum(1), cout(1)) := FA(a(1), b(1), cout(0));
            (sum(2), cout(2)) := FA(a(2), b(2), cout(1));
            (sum(3), cout(3)) := FA(a(3), b(3), cout(2));

            RETURN (sum(3),sum(2),sum(1),sum(0),cout(3),cout(2),cout(1),cout(0));

    END FUNCTION;

    FUNCTION subtrator4Bits(a,b : std_logic_vector) RETURN std_logic_vector IS

        VARIABLE sum, cout                  :      std_logic_vector(3 DOWNTO 0);

        BEGIN

            (sum(0), cout(0)) := FA(a(0), (NOT b(0)), '1');
            (sum(1), cout(1)) := FA(a(1), (NOT b(1)), cout(0));
            (sum(2), cout(2)) := FA(a(2), (NOT b(2)), cout(1));
            (sum(3), cout(3)) := FA(a(3), (NOT b(3)), cout(2));

            RETURN (sum(3),sum(2),sum(1),sum(0),cout(3),cout(2),cout(1),cout(0));

    END FUNCTION;

    FUNCTION trocaDeSinal(a,b : std_logic_vector) RETURN std_logic_vector IS

        VARIABLE sum, cout                  :      std_logic_vector(3 DOWNTO 0);

        BEGIN

            (sum(0), cout(0)) := FA('0', (NOT b(0)), '1');
            (sum(1), cout(1)) := FA('0', (NOT b(1)), cout(0));
            (sum(2), cout(2)) := FA('0', (NOT b(2)), cout(1));
            (sum(3), cout(3)) := FA('0', (NOT b(3)), cout(2));

            RETURN (sum(3),sum(2),sum(1),sum(0),cout(3),cout(2),cout(1),cout(0));

    END FUNCTION;

    FUNCTION incrementoDe1(a,b : std_logic_vector) RETURN std_logic_vector IS

        VARIABLE sum, cout                  :      std_logic_vector(3 DOWNTO 0);

        BEGIN

            (sum(0), cout(0)) := FA(a(0), '1', '0');
            (sum(1), cout(1)) := FA(a(1), '0', cout(0));
            (sum(2), cout(2)) := FA(a(2), '0', cout(1));
            (sum(3), cout(3)) := FA(a(3), '0', cout(2));

            RETURN (sum(3),sum(2),sum(1),sum(0),cout(3),cout(2),cout(1),cout(0));

    END FUNCTION;

    -- SOMA
    SIGNAL soma, carryoutSOMA : std_logic_vector(3 DOWNTO 0);

    -- SUBTRAÇÃO
    SIGNAL sub, carryoutSUB : std_logic_vector(3 DOWNTO 0);

    -- INCREMENTO DE 1
    SIGNAL inc, carryoutINC : std_logic_vector(3 DOWNTO 0);

    -- TROCA DE SINAL
    SIGNAL tds, carryoutTDS : std_logic_vector(3 DOWNTO 0);



    BEGIN

    (soma(3),soma(2),soma(1),soma(0),carryoutSOMA(3),carryoutSOMA(2),carryoutSOMA(1),carryoutSOMA(0)) &lt;= somador4Bits(a,b);
    (sub(3),sub(2),sub(1),sub(0),carryoutSUB(3),carryoutSUB(2),carryoutSUB(1),carryoutSUB(0)) &lt;= subtrator4Bits(a,b);
    (inc(3),inc(2),inc(1),inc(0),carryoutINC(3),carryoutINC(2),carryoutINC(1),carryoutINC(0)) &lt;= incrementoDe1(a,b);
    (tds(3),tds(2),tds(1),tds(0),carryoutTDS(3),carryoutTDS(2),carryoutTDS(1),carryoutTDS(0)) &lt;= trocaDeSinal(a,b);


    resultado   &lt;=  soma    WHEN    seletor &lt;= "00"  ELSE
                    sub     WHEN    seletor &lt;= "01"  ELSE
                    inc     WHEN    seletor &lt;= "10"  ELSE
                    tds     WHEN    seletor &lt;= "11";

    cout        &lt;=  carryoutSOMA(3)    WHEN    seletor &lt;= "00"  ELSE
                    carryoutSUB(3)     WHEN    seletor &lt;= "01"  ELSE
                    carryoutINC(3)     WHEN    seletor &lt;= "10"  ELSE
                    carryoutTDS(3)     WHEN    seletor &lt;= "11";

END Behavioral;
</vhdl>
  <vhdl name="FullAdder">library ieee;
use ieee.std_logic_1164.all;

ENTITY FullAdder IS
  PORT (
    a, b, cin: in std_logic;
    sum, cout: out std_logic
  );
END FullAdder;

ARCHiTECTURE Behavioral OF FullAdder IS
  
    FUNCTION HA(a, b: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout: std_logic;
  
        BEGIN
    
            sum := a XOR b;
            cout := a AND b;
            return (sum, cout);
  
    END FUNCTION;

    FUNCTION FA(a, b, c: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout  :       std_logic;
        VARIABLE sumHA1,coutHA1,coutHA2     :       std_logic;

        BEGIN

            (sumHA1,coutHA1)    :=   HA(a,b);
            (sum,coutHA2)       :=   HA(sumHA1,c);
            cout                :=   coutHA1 OR coutHA2;

            RETURN (sum, cout);
    
    END FUNCTION;

    BEGIN

    (sum,cout) &lt;= FA(a,b,cin);


END Behavioral;
</vhdl>
  <vhdl name="FourBitAdder">library ieee;
use ieee.std_logic_1164.all;

ENTITY FourBitAdder IS
  PORT (
    a, b    :   in std_logic_vector(3 DOWNTO 0);
    sum     :   out std_logic_vector(3 DOWNTO 0); 
    cout    :   out std_logic
  );
END FourBitAdder;

ARCHiTECTURE Behavioral OF FourBitAdder IS
  
    FUNCTION HA(a, b: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout: std_logic;
  
        BEGIN
    
            sum := a XOR b;
            cout := a AND b;
            return (sum, cout);
  
    END FUNCTION;

    FUNCTION FA(a, b, c: std_logic) RETURN std_logic_vector IS 
    
        VARIABLE sum, cout                  :       std_logic;
        VARIABLE sumHA1,coutHA1,coutHA2     :       std_logic;

        BEGIN

            (sumHA1,coutHA1)    :=   HA(a,b);
            (sum,coutHA2)       :=   HA(sumHA1,c);
            cout                :=   coutHA1 OR coutHA2;

            RETURN (sum, cout);
    
    END FUNCTION;

    FUNCTION somador4Bits(a,b : std_logic_vector) RETURN std_logic_vector IS

        VARIABLE sum, cout                  :      std_logic_vector(3 DOWNTO 0);

        BEGIN

            (sum(0), cout(0)) := FA(a(0), b(0), '0');
            (sum(1), cout(1)) := FA(a(1), b(1), cout(0));
            (sum(2), cout(2)) := FA(a(2), b(2), cout(1));
            (sum(3), cout(3)) := FA(a(3), b(3), cout(2));

            RETURN (sum(3),sum(2),sum(1),sum(0),cout(3),cout(2),cout(1),cout(0));

    END FUNCTION;

    SIGNAL carryout : std_logic_vector(3 DOWNTO 0);

    BEGIN

    (sum(3),sum(2),sum(1),sum(0),carryout(3),carryout(2),carryout(1),carryout(0)) &lt;= somador4Bits(a,b);
    cout &lt;= carryout(3);

END Behavioral;
</vhdl>
</project>
